macros:
    zoom: -1.18, 0.301
    # zoom: -1.985540, 0.0
    # zoom: -1.257368, -0.378730
    # zoom: 0.358561, 0.322949
    color_scale: 50.0

subcode: shader_main
    vec2 z = vec2(0.0);
    vec2 c = v2_uv;
    $call cycle_scale_offset
    c *= f_scale * 1.5 ;
    c += vec2(f_ox, f_oy);
    
    f_iter = -1.0
    f_l = 0.0
    $for i=0:200
        $(set:z2_r=z.x*z.x-z.y*z.y)
        $(set:z2_i=2.0*z.x*z.y)
        z = vec2($(z2_r),$(z2_i)) + c;
        f_l = length(z)
        $if f_l > 15.0
            f_iter = float(i)
            break;
    
    $if f_iter < 0.0
        color = vec3(0.0)
    $else
        $(set:smooth=2.0-log(log(f_l))*1.5)
        f_iter += $(smooth)
        f_iter /= $(color_scale)
        $call calc_f_hue
        color = h2rgb(f_hue)

    # --------------------------
    subcode: cycle_scale_offset
        f_omega = 6.28/20
        # cycle [0:1]
        f_cycle = (sin(f_omega*f_time-3.14/2)+1)/2
        f_scale = pow(2.0,-12*f_cycle)
        $(for:x,y and -0.5, 0.0 and $(zoom))
            f_o$1 = $2+($3-($2))*(1-f_scale)

    # --------------------------
    subcode: calc_f_hue
        f_hue = f_time*0.2454
        f_cycle = sin(f_omega*f_time/2)
        f_hue  += pow(f_iter, 0.2*f_cycle+0.4)

    $function h2rgb(float h)
        $return_type vec3
        v4_k = vec4(1.0, 2.0/3.0, 1.0/3.0, 3.0)
        v3_p = abs(fract(vec3(h,h,h) + v4_k.xyz) * 6.0 - v4_k.www)
        $(set:white=vec3(1.0,1.0,1.0))
        return clamp(v3_p-$(white), 0.0, 1.0)
